version: '3'
services:
  client-qx:
    build:
      context: .
      dockerfile: ./client-qx/Dockerfile
    volumes:
      - ./client-qx:/home/node/qxapp
  webserver:
    build:
      context: .
      dockerfile: ./server-py-aiohttp/Dockerfile
      args:
        serverdir: server-py-aiohttp
    ports:
      - '9081:8080'
    environment:
      - SIMCORE_WEB_CONFIG=production
    volumes:
      - ./server-py-aiohttp:/usr/src/app
      - ./client-qx/source-output:/usr/src/app/client
    depends_on: 
      - client-qx
  rabbit:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - "15672:15672"
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  flower:
    image: ondrejit/flower:latest
    command: --broker=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbit:5672
    ports:
      - 5555:5555
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  director:
    build:
      context: .
      dockerfile: ./director/Dockerfile
    volumes:
      - ./director:/work/director
      - ./models:/work/models
      - /var/run/docker.sock:/var/run/docker.sock
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "8010:8010"
    depends_on:
      - rabbit
    environment:
      - PYTHONPATH=/work/models
  sidecar:
    build:
      context: .
      dockerfile: ./sidecar/Dockerfile
    volumes:
      - input:/input
      - output:/output
      - log:/log
      - ./sidecar:/work
      - /var/run/docker.sock:/var/run/docker.sock
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "8000:8000"
    #dns:
    #  - 172.16.8.15
    environment:
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
  postgres:
    restart: always
    image: postgres:10
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - postgres
volumes:
  input:
  output:
  log:
  postgres: