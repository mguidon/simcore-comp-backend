version: '3'
services:
  build-qx-dev:
    build:
      context: .
      dockerfile: _dockerfiles/build-qx/Dockerfile
    volumes:
      - ./client-qx:/home/node/qxapp
  webserver:
    build:
      context: .
      dockerfile: _dockerfiles/qxapp/python/Dockerfile
      args:
        serverdir: server-py-aiohttp
    ports:
      - '9081:8080'
    environment:
      - SIMCORE_WEB_CONFIG=production
    volumes:
      - ./server-py-aiohttp:/usr/src/app
      - ./client-qx/source-output:/usr/src/app/client
    depends_on: 
      - build-qx-dev
#  rabbit:
#    image: rabbitmq:3-management
#    environment:
#      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
#      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
#    ports:
#      - "15672:15672"
#  flower:
#    image: ondrejit/flower:latest
#    command: --broker=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_USER}@rabbit:5672
#    ports:
#      - 5555:5555
#    depends_on:
#      - director
  director:
    build:
      context: .
      dockerfile: ./director/Dockerfile
    volumes:
      - ./director:/work
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8010:8010"
#    depends_on:
#      - rabbit
#  sidecar:
#    build:
#      context: .
#      dockerfile: ./sidecar/Dockerfile
#    volumes:
#      - input:/input
#      - output:/output
#      - log:/log
#      - ./sidecar:/work
#      - /var/run/docker.sock:/var/run/docker.sock
#    ports:
#      - "8000:8000"
#    dns:
#      - 172.16.8.15
#  postgres:
#    restart: always
#    image: postgres:10
#    environment:
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#      - POSTGRES_DB=${POSTGRES_DB}
#    volumes:
#      - postgres:/var/lib/postgresql/data
#    ports:
#      - "5432:5432"
#  adminer:
#    image: adminer
#    restart: always
#    ports:
#      - 8080:8080
#    depends_on:
#      - postgres
volumes:
  input:
  output:
  log:
  postgres: